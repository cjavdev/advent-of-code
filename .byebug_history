c
p x - (j - x)
p [i, j]
c
@grid
n
p [i, j]
q
p [i - (@grid.length - 1)]
p @grid.length
p i - @grid.length
p [i, j]
c
cell 1
c
b 42
p [i, j]
c
cell
c
p [i, j]
cell
c
step
label
q
c
p paths
n
p paths
current
n
p paths
n
p paths
n
to_visit
p paths
n
p paths
current
n
p paths
n
p paths
n
q
c
current
n
@routes[current]
current
n
to_visit
n
current
n
c
@routes
n
quit
@routes
n
from
@routes
c
puts [i, j]
c
puts i, j
q
c
n
puts @energy_levels.map {|x|x.join}.join("\n")
p @energy_levels.map {|x|x.join}.join("\n")
p @energy_levels.map {|x|x.join}
p @energy_levels.map {_1.join}
p @energy_levels
puts @energy_levels
puts i, j
n
puts i, j
n
delete 17
c
b 22
n
puts i, j
n
puts i, j
n
puts i, j
n
puts i, j
n
puts i
i
row
n
b 17
b 16
c
n
@energy_levels
n
@energy_levels
q
c
quit
c
puts j
puts i
@energy_levels[i][j]
puts j
puts i
c
n
sorted_scores
n
incomplete_lines
c
@lines.first.illegal_char
@lines.first.corrupted?
@lines
incomplete_lines
c
@lines
c
q
c
char
PTS2[char]
PTS[char]
score
n
score
b 58
n
c
illegal_char
c
basin_points
n
basin_points
c
n
basin_points
n
basin_points
c
basin_points
n
quit
basin_points
points
n
candidates
n
points
current
n
points
n
c
segments.freq.find {|k, v| v == 9}[0]
segments.freq.find {|k, v| v == 9}
segments.freq
q
c
n
top_right
possible
n
c
@mapping.find_index("bceg")
@mapping.find_index("bcdefg")
@mapping.find_index("bcdef")
@mapping
output
c
output
q
c
possibility.chars - four.chars
possibility == six
possibility
c
possible.first.chars.count
possible.first.chars - four.chars
nine
possible
six
possible[1].chars - four.chars
possible.last.chars - four.chars
possible.first.chars - four.chars
possible.first.chars
four.chars
four
possible
n
c
seven.chars.reject {[top_right, bottom_right].include?(_1)}[0]
seven.chars.reject {[top_right, bottom_right].include?(_1)}
c
seven.chars
seven
bottom_right
top_right
seven.split
seven
c
q
c
q
c
point_fuels
c
point_fuels
c
q
c
point_fuels
l=
c
q
c
point_fuels
c
min_fuel
n
l=
max
min
positions
distance
align_point
pos
point_fuels
c
point_fuels
c
point_fuels
c
point_fuels
c
positions
point_fuels
c
min_fuel
point_fuels
c
point_fuels
c
point_fuels
c
min_fuel
point_fuels

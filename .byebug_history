continue
quit
ages
c
ages
c
ages
c
ages
n
c
ages
n
ages
n
births
ages
n
ages
births
n
births
n
births
ages[7]
ages
n
ages
births
n
continue
c
n
puts x1, y1
x1, y1
n
y_dir
x_dir
n
c
n
c
n
y_dir
x_dir
y2
x2
y1
x1
n
c
floor.rows
n
puts x, y
x, y
c
continue
c
board
c
boards
boars
c
boards
c
boards
c
step
winning_board
winning_board?
n
b 13
step
board
c
step
n
numbers
c
included_measurements
right
n
left
n
left
included_measurements
mid
puts i
c
puts i
c
left
n
mid[i]
puts i
included_measurements
mid
n
included_measurements
n
included_measurements
n
q
c
puts mid[i]
puts left
puts i
puts mid
included_measurements
n
left
n
puts i
included_measurements
n
q
c
right
n
puts i
i
mid[i]
mid
q
mid[i]
puts included_measurements
included_measurements
mid
q
puts mid
puts included_measurements
puts mid
puts mid[i]
left
right
puts mid
puts mid[i]
l=
puts included_measurements
puts mid
puts mid[i]
n
puts i
n
left
mid[i]
puts i
i
n
puts measurement_bits
p measurement_bits
c
n
included_measurements
n
included_measurements
n
mid[i]
right
left
n
measurement_bits
mid[i]
mid
n
included_measurements
n
q
c
included_measurements
c
measurement_bits
mid[i]
mid
right
left
n
measurement_bits
c
included_measurements.find{_1[-1] == "1"}
included_measurements
c
included_measurements.first
c
step
q
c
included_measurements
n
step
q
oxygen_rate_bits
oxygen_rate_bits.to_i(2)
c
n
step
continue
c
included_measurements.find {_1[-1] == "1"}
included_measurements.find {_1.last == "1"}
included_measurements
c
included_measurements
c
included_measurements.map {_1.to_i(2)}
included_measurements
c
n
included_measurements
n
included_measurements
m[i]
n
included_measurements
m[i]
gamma_bits[i]
l=
m[i]
puts i
i
m
n
gamma_bits
included_measurements
q
c
measurement_bits
included_measurements
c
epsilon_rate.to_s(2)
epsilon_rate
included_measurements
max_width
n
c
bit_frequency
n
step
q
c
p counter
puts counter
c
p m
p counter.reverse.join 
p counter.reverse.join == measurement_bits.first
c
measurement_bits.first
p counter.reverse.join == measurement_bits.first
puts m
p counter.reverse.join
c
p counter.reverse.join
m
p counter.join
p counter
